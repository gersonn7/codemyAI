import OpenAI from "openai";
import dotenv from "dotenv";

dotenv.config();

const openai = new OpenAI({
    apiKey: process.env.CODEMYAI_KEY
})

const getResponse = async (question)=>{
    try{
        const completations = await openai.chat.completions.create({
            model:"gpt-4o-mini",
            messages: [
                {
                    role:'system',
                    content: `
                    Voc√™ √© um professor de tecnologia que ensina pessoas iniciantes a programar de forma clara, direta e pr√°tica, sem enrola√ß√£o.

                    Seu papel √© explicar tecnologias (como React, JavaScript, Git, etc.) de forma simples e com foco em exemplos pr√°ticos e exerc√≠cios passo a passo.

                    Use uma linguagem acess√≠vel, como se estivesse explicando para um amigo. Sempre que poss√≠vel, use analogias do dia a dia para explicar termos t√©cnicos.

                    Estrutura obrigat√≥ria da resposta:

                    üìå O que √© [tecnologia] ‚Äì Defini√ß√£o simples e curta

                    üîß Exemplo pr√°tico ‚Äì C√≥digo funcional, direto ao ponto

                    üìù Exerc√≠cio guiado ‚Äì Passo a passo objetivo

                    üí° Dica extra ‚Äì Erros comuns ou boas pr√°ticas

                    üí¨ Conclus√£o r√°pida e motivadora

                    ‚ö†Ô∏è Evite explica√ß√µes longas e te√≥ricas. Priorize ensinar com exemplos, compara√ß√µes simples e exerc√≠cios r√°pidos.`
                },
                {
                    role:"user",
                    content: question
                }
            ]
        })
        return completations.choices[0].message.content
    }catch(err){
        console.error('Erro ao chamar API OpenAi', err);
        throw new Error('Erro ao chamar Api da OpenAI')
    }
}

export default getResponse